{"version":3,"sources":["store/timezone.js","components/ClockClassic.jsx","components/DigitalClock.jsx","components/SelectTimezone.jsx","components/Clock.jsx","App.js","index.js"],"names":["time","Date","realHour","realMinute","realSecond","hour","minute","second","timezone","this","getTimezoneOffset","default","utc","makeAutoObservable","b","getTime","getSeconds","getMinutes","getHours","fetch","then","response","json","ClockClassic","observer","className","data-hour-hand","style","transform","todo","data-minute-hand","data-second-hand","DigitalClock","SelectTimezone","onChange","e","target","value","map","item","index","name","Clock","window","addEventListener","fetchTodos","App","setInterval","setTimeZone","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAoCe,M,WAxBb,aAAe,yBAVfA,KAAO,IAAIC,KAUG,KATdC,SASc,UARdC,WAQc,UAPdC,WAOc,UANdC,KAAO,EAMO,KALdC,OAAS,EAKK,KAJdC,OAAS,EAIK,KAHdC,SAGc,WAHCC,KAAKT,KAAKU,oBAAsB,IAGjC,KAFdC,QAEc,YAFA,IAAIV,MAAOS,oBAAsB,IAEjC,KADdE,IAAM,GAEJC,YAAmBJ,M,+CAGrB,WACE,IAAIK,EAAI,IAAIb,KACRW,EAAME,EAAEC,UAAoC,IAAxBD,EAAEJ,oBAC1BD,KAAKT,KAAO,IAAIC,KAAKW,EAAM,KAAUH,KAAKD,UAC1CC,KAAKF,OAASE,KAAKT,KAAKgB,aAAe,GACvCP,KAAKH,QAAUG,KAAKF,OAASE,KAAKT,KAAKiB,cAAgB,GACvDR,KAAKJ,MAAQI,KAAKH,OAASG,KAAKT,KAAKkB,YAAc,GAEnDT,KAAKP,SAAWO,KAAKT,KAAKkB,WAC1BT,KAAKN,WAAaM,KAAKT,KAAKiB,aAC5BR,KAAKL,WAAaK,KAAKT,KAAKgB,e,wBAG9B,WAAc,IAAD,OACXG,MAAM,mCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAW,EAAKV,IAAL,YAAeU,U,aC5BhCC,EAAeC,aAAS,WAC5B,OACE,sBAAKC,UAAU,QAAf,UACE,qBACEA,UAAU,YACVC,kBAAA,EACAC,MAAO,CAAEC,UAAU,0BAAD,OAAwC,IAAZC,EAAKxB,KAAjC,WACpB,qBACEoB,UAAU,cACVK,oBAAA,EACAH,MAAO,CAAEC,UAAU,0BAAD,OAA0C,IAAdC,EAAKvB,OAAjC,WACpB,qBACEmB,UAAU,cACVM,oBAAA,EACAJ,MAAO,CAAEC,UAAU,0BAAD,OAA0C,IAAdC,EAAKtB,OAAjC,WACpB,qBAAKkB,UAAU,iBAAf,eACA,qBAAKA,UAAU,iBAAf,eACA,qBAAKA,UAAU,iBAAf,eACA,qBAAKA,UAAU,iBAAf,eACA,qBAAKA,UAAU,iBAAf,eACA,qBAAKA,UAAU,iBAAf,eACA,qBAAKA,UAAU,iBAAf,eACA,qBAAKA,UAAU,iBAAf,eACA,qBAAKA,UAAU,iBAAf,eACA,qBAAKA,UAAU,kBAAf,gBACA,qBAAKA,UAAU,kBAAf,gBACA,qBAAKA,UAAU,kBAAf,sBC1BAO,EAAeR,aAAS,WAC5B,OACE,sBAAKC,UAAU,cAAf,UACGI,EAAK3B,SADR,IACmB2B,EAAK1B,WADxB,IACqC0B,EAAKzB,iBCHxC6B,EAAiBT,aAAS,WAC9B,OACE,8BACE,yBAAQU,SAAU,SAACC,GAAD,OAAQN,EAAKrB,SAAW2B,EAAEC,OAAOC,OAAnD,UACE,wBAAQA,MAAOR,EAAKlB,QAApB,+DACCkB,EAAKjB,IAAI0B,KAAI,SAACC,EAAMC,GACnB,OACE,wBAAoBH,MAAOE,EAAK/B,SAAhC,SACG+B,EAAKE,MADKD,cCJnBE,EAAQlB,aAAS,WACrB,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACF,EAAD,MAEF,qBAAKE,UAAU,QAAf,SACE,cAACO,EAAD,MAEF,qBAAKP,UAAU,YAAf,SACE,cAACQ,EAAD,cCZVU,OAAOC,iBAAiB,mBAAoBf,EAAKgB,cAEjD,IAYeC,EAZHtB,aAAS,WAKnB,OAJAuB,aAAY,WACVlB,EAAKmB,gBACJ,KAGD,qBAAKvB,UAAU,YAAf,SACE,cAACiB,EAAD,SCVNO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9c4e7cde.chunk.js","sourcesContent":["import { makeAutoObservable, makeObservable } from 'mobx';\r\nclass Todo {\r\n  time = new Date();\r\n  realHour = `00`;\r\n  realMinute = `00`;\r\n  realSecond = `00`;\r\n  hour = 0;\r\n  minute = 0;\r\n  second = 0;\r\n  timezone = `${-this.time.getTimezoneOffset() / 60}`;\r\n  default = `${-new Date().getTimezoneOffset() / 60}`;\r\n  utc = [];\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  setTimeZone() {\r\n    let b = new Date();\r\n    let utc = b.getTime() + b.getTimezoneOffset() * 60000;\r\n    this.time = new Date(utc + 3600000 * this.timezone);\r\n    this.second = this.time.getSeconds() / 60;\r\n    this.minute = (this.second + this.time.getMinutes()) / 60;\r\n    this.hour = (this.minute + this.time.getHours()) / 12;\r\n    /* real Hours */\r\n    this.realHour = this.time.getHours();\r\n    this.realMinute = this.time.getMinutes();\r\n    this.realSecond = this.time.getSeconds();\r\n  }\r\n\r\n  fetchTodos() {\r\n    fetch('http://localhost:9000/timezones')\r\n      .then((response) => response.json())\r\n      .then((json) => (this.utc = [...json]));\r\n  }\r\n}\r\n\r\nexport default new Todo();\r\n","import React, { useState, useEffect } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport todo from '../store/timezone';\r\n\r\nconst ClockClassic = observer(() => {\r\n  return (\r\n    <div className=\"clock\">\r\n      <div\r\n        className=\"hand hour\"\r\n        data-hour-hand\r\n        style={{ transform: `translate(-50%) rotate(${todo.hour * 360}deg)` }}></div>\r\n      <div\r\n        className=\"hand minute\"\r\n        data-minute-hand\r\n        style={{ transform: `translate(-50%) rotate(${todo.minute * 360}deg)` }}></div>\r\n      <div\r\n        className=\"hand second\"\r\n        data-second-hand\r\n        style={{ transform: `translate(-50%) rotate(${todo.second * 360}deg)` }}></div>\r\n      <div className=\"number number1\">1</div>\r\n      <div className=\"number number2\">2</div>\r\n      <div className=\"number number3\">3</div>\r\n      <div className=\"number number4\">4</div>\r\n      <div className=\"number number5\">5</div>\r\n      <div className=\"number number6\">6</div>\r\n      <div className=\"number number7\">7</div>\r\n      <div className=\"number number8\">8</div>\r\n      <div className=\"number number9\">9</div>\r\n      <div className=\"number number10\">10</div>\r\n      <div className=\"number number11\">11</div>\r\n      <div className=\"number number12\">12</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport { ClockClassic };\r\n","import React from 'react';\r\nimport todo from '../store/timezone';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst DigitalClock = observer(() => {\r\n  return (\r\n    <div className=\"digit__item\">\r\n      {todo.realHour}:{todo.realMinute}:{todo.realSecond}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport { DigitalClock };\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport todo from '../store/timezone';\r\n\r\nconst SelectTimezone = observer(() => {\r\n  return (\r\n    <div>\r\n      <select onChange={(e) => (todo.timezone = e.target.value)}>\r\n        <option value={todo.default}>Ваш город</option>\r\n        {todo.utc.map((item, index) => {\r\n          return (\r\n            <option key={index} value={item.timezone}>\r\n              {item.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport { SelectTimezone };\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport todo from '../store/timezone';\r\nimport { ClockClassic } from './ClockClassic';\r\nimport { DigitalClock } from './DigitalClock';\r\nimport { SelectTimezone } from './SelectTimezone';\r\n\r\nconst Clock = observer(() => {\r\n  return (\r\n    <div className=\"time\">\r\n      <div className=\"time-container\">\r\n        <div className=\"clock-main\">\r\n          <ClockClassic />\r\n        </div>\r\n        <div className=\"digit\">\r\n          <DigitalClock />\r\n        </div>\r\n        <div className=\"timezones\">\r\n          <SelectTimezone />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport { Clock };\r\n","import React, { useState, useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport './App.css';\nimport { Clock } from './components/Clock';\nimport todo from './store/timezone';\n\nwindow.addEventListener('DOMContentLoaded', todo.fetchTodos());\n\nconst App = observer(() => {\n  setInterval(() => {\n    todo.setTimeZone();\n  }, 1000);\n\n  return (\n    <div className=\"container\">\n      <Clock />\n    </div>\n  );\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}